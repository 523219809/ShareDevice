@{
    ViewData["Title"] = "Home Page";
}
<br />
<div class="row">

    <div class="col-md-6">

        <canvas id="Canvas" width="@ViewBag.width" height="@ViewBag.height"></canvas>
    </div>

    <div class="col-md-6">
        <h2>Action Information</h2>
        <div id="output" style="max-height: 600px; overflow-y: scroll;"></div>
    </div>
</div>


@section Scripts {
    <script language="javascript" type="text/javascript">


        $(function () {

            document.oncontextmenu = function () { return false; };
            document.ondragstart = function () { return false; };
            document.onselectstart = function () { return false; };
            document.onselect = function () { return false; };
            
            var wsUri = "ws://" + window.location.host + "/Websocket";

            var canvas = document.getElementById("Canvas");
            var context = canvas.getContext("2d");
            var cWidth = canvas.width;
            var cHeight = canvas.height;

            var output = document.getElementById("output");

            var websocket;

            function startWebSocket() {

                websocket = new WebSocket(wsUri);
                websocket.onopen = function (evt) {
                    onOpen(evt)
                };
                websocket.onclose = function (evt) {
                    onClose(evt)
                };
                websocket.onmessage = function (evt) {
                    onMessage(evt)
                };
                websocket.onerror = function (evt) {
                    onError(evt)
                };
            }

            function onOpen(evt) {
                doSend("WebSocket rocks");
                writeToScreen("手机信号加载中,请耐心等待...");
                
            }

            function onClose(evt) {
                writeToScreen('<span style="color: red;">链接关闭!</span> ');
            }

            function onMessage(evt) {

                if (typeof (evt.data) == "string") {
                    writeToScreen('<span style="color: blue;">RESPONSE: ' + evt.data + '</span>');

                    $("#loading").fadeOut(300);

                } else {
                    var image = new Image();

                    image.onload = function () {
                        context.clearRect(0, 0, cWidth, cHeight);
                        context.drawImage(image, 0, 0, cWidth, cHeight);
                        window.URL.revokeObjectURL(image.src)
                    }
                    image.src = URL.createObjectURL(evt.data);
                }

            }

            function onError(evt) {
                $("#loading").fadeOut(300);
                writeToScreen('<span style="color: red;">链接失败,请确认是否已经有人链接此设备!</span> ');
                
            }

            function doSend(message) {
                websocket.send(message);
                writeToScreen("SENT: " + message);
            }
            function doSendNoWrite(message) {
                websocket.send(message);
            }

            function writeToScreen(message) {
                var pre = document.createElement("p");
                pre.style.wordWrap = "break-word";
                pre.innerHTML = message;
                output.appendChild(pre);
                output.scrollTop = output.scrollHeight;
            }

            var mousedown = false;
            canvas.onmousedown = function (e) {


                var e = window.event || e
                var rect = this.getBoundingClientRect();
                var mouseX = e.clientX - rect.left;//获取鼠标在canvsa中的坐标
                var mouseY = e.clientY - rect.top;

                console.log(mouseX + "," + mouseY);

                doSend("1:" + mouseX + "," + mouseY);

                mousedown = true;

            }

            canvas.onmouseout = function (e) {
                if (mousedown != true) return;
                mousedown = false;
                doSend("2:up");
            }

            canvas.onmouseup = function (e) {
                if (mousedown != true) return;
                mousedown = false;
                doSend("2:up");
            }

            canvas.onmousemove = function (e) {

                if (mousedown != true) return;
                var e = window.event || e

                var rect = this.getBoundingClientRect();

                var mouseX = e.clientX - rect.left;//获取鼠标在canvsa中的坐标

                var mouseY = e.clientY - rect.top;

                doSendNoWrite("3:" + mouseX + "," + mouseY);

            }

            //确保服务器已经释放相关资源
            setTimeout(function () {
                startWebSocket();
            }, 500);
            

        })

    </script>
}
